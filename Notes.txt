Är det ok att platform states är såpas barebones?
Är det bättre att bara ha platup och down istället än dual och grad?
borde grad ha ett eget interface som extendar iplat?

static class struktur?

Refaktoriseringsplan:
TODO:

Observer mellan model och view. Wrapper ska skapas i view

Composite för IVehicle, kanske mer. Compositge klassen ska ha en lista med object
som har gemensamma metoder som man vill kalla alla samtidigt.

Gör UML.

OPTIONAL

Add stopVehicle för general och Motorized använder stopEngine, samma för start.

För DUMB, listeners för knappar kan läggas till utifrån view,
view har bara metoder för att binda listeners till knappen?

DONE:

Förbättra platform med composition over inheritence
Gör classes för platform, en till Scania och en för CarCarrierScania, allt ska implementa IPlatform
Sate platform?
platformStateLocked {
    gas()
    lower()
    rasie()
    ...
}

Factory Pattern är bra för att skapa fordon och kommer va bra för framtiden när vi utökar funktionaliteten.
Vehicle Factory {
    create(String modelName)
    createVolvo()
    createRandom()
    ...
}

Uppgift:

Composite Pattern: Treat a group of objects uniformly as if they were a single instance of an object of that type.
? Detta gör vi redan med polumorphismen av fordon och ses i World där allt ses som en IMotorized / IVehicle.
